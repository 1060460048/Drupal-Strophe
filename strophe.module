<?php
/**
 * Implementation of hook_init().
 */
function strophe_init() {
  static $only_once = True;
  if($only_once) {
    $only_once = False;
    global $user;
    include_once drupal_get_path('module', 'ejabberd_auth') . '/drupalAuth.inc';
    include_once drupal_get_path('module', 'strophe') . '/strophe.inc';
    drupal_add_js(array(
      'xmpp' => array(
        'bosh_service' => variable_get('strophe_bosh_url', '/http-bind'),
        'jid' => strophe_jid($user),
        'passwd' => ejabberd_auth_hash($user->name),
        'nickname' => $user->name
        )
      )
    , 'setting');
    //chat 'b64', 'md5', 'sha1', 'drupal'
    $js = array('jquery.cookie', 'strophe', 'poem', 'init');
    foreach($js as $j){
      drupal_add_js(drupal_get_path('module', 'strophe') ."/js/$j.js");
    }
    if(0 != $user->uid) {
      drupal_add_js(drupal_get_path('module', 'strophe') ."/js/connect.js", 'theme', 'footer');
    }
  }
}

function strophe_menu() {
  $items['admin/settings/strophe'] = array(
    'description' => 'Chat with XMPP over HTTP',
    'title' => 'Chat with bosh',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('strophe_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    );
  return $items;
}

function strophe_admin_settings() {
  $form['strophe_jabber'] = array(
    '#title' => t('XMPP'),
    '#type' => 'fieldset',
    '#description' => t('XMPP settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['strophe_jabber']['strophe_bosh_url'] = array(
    '#type' => 'textfield',
    '#title' => 'Url of BOSH service',
    '#default_value' => variable_get('strophe_bosh_url', '/http-bind'),
    '#description' => t("URL of the BOSH service for jabber HTTP binding"),
  );
  $form['strophe_jabber']['strophe_domain'] = array(
    '#type' => 'textfield',
    '#title' => 'Domain for XMPP',
    '#default_value' => variable_get('strophe_domain', 'jabber.org'),
    '#description' => t(""),
  );
  $form['strophe_jabber']['strophe_place'] = array(
    '#type' => 'textfield',
    '#title' => 'Place for XMPP',
    '#default_value' => variable_get('strophe_place', 'Drupal_Strophe_Client'),
    '#description' => t("XMPP user can be connected more than one times, with different place (the name of the client, or the name of the place where is the chatter is)"),
  );
  $form['strophe_bot'] = array(
    '#title' => t('Bot'),
    '#type' => 'fieldset',
    '#description' => t('The bot of this website'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['strophe_bot']['strophe_bot_user'] = array(
    '#type' => 'textfield',
    '#title' => 'Default room name',
    '#default_value' => variable_get('strophe_bot_user', 'admin'),
    '#description' => t("Bot user, should be admin your ejabberd.cfg"),
    
  );
  $form['strophe_bot']['strophe_bot_name'] = array(
    '#type' => 'textfield',
    '#title' => 'Default room name',
    '#default_value' => variable_get('strophe_bot_name', 'The bot'),
    '#description' => t("Name of the bot"),
    
  );
  return system_settings_form($form);
}

function strophe_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      $blocks[0] = array(
        'info' => t('XMPP status'),
        'cache' => BLOCK_NO_CACHE,
      );
      return $blocks;
    case 'configure':
      switch($delta) {
        case 0:
        break;
      }
    break;
    case 'save':
    break;
    case 'view':
      global $user;
      if(0 == $user->uid) {
        return;
      }
      switch($delta) {
        case 0:
          drupal_add_js(drupal_get_path('module', 'strophe') . '/js/status.js');
          $block['subject'] = t('Status');
          $block['content'] = theme('strophe_status');
          return $block;
      }
    break;
  };
}

function strophe_theme() {
  $path = drupal_get_path('module', 'strophe');
  return array(
  'strophe_status' => array(
    'path' => "$path/theme",
    'template' => 'strophe_status',
    'arguments' => array(),
  ));
}