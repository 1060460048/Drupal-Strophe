<?php

class strophe_room {
	function __construct() {
		$this->lines = 5;
		$this->room = 'conference';
	}
}

function strophe_muc_block($op = 'list', $delta = 0, $edit = array()) {
  include_once drupal_get_path('module', 'strophe') . '/strophe.inc';
  switch ($op) {
    case 'list':
      $blocks[0] = array(
        'info' => t('Multi User Chat room'),
        'cache' => BLOCK_CACHE,
      );
      $blocks[1] = array(
        'info' => t('Connected chatters'),
        'cache' => BLOCK_CACHE,
      );
      return $blocks;
    case 'configure':
      switch($delta) {
        case 0:
          $form['strophe_block_num_lines'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of chat line to display'),
            '#default_value' => variable_get('strophe_block_num_lines', 5),
          );
          $form['strophe_block_room'] = array(
            '#type' => 'textfield',
            '#title' => t('Room name'),
            '#default_value' => variable_get('strophe_block_room', 'conference'),
            );
        break;
        case 1:
          $form['strophe_link_to_talk'] = array(
            '#type' => 'checkboxes',
            '#title' => t('Direct talk'),
            '#default_value' => variable_get('strophe_link_to_talk', array('talk' => 0)),
            '#description' => t('Allow a click to a chatter name to init a talk.'),
            '#options' => array('talk' => t('Direct talk'))
            );
        break;
      }
      return $form;
    case 'save':
      variable_set('strophe_block_num_lines', (int)$edit['strophe_block_num_lines']);
      variable_set('strophe_link_to_talk', $edit['strophe_link_to_talk']);
      break;
    case 'view':
      global $user;
      if(0 == $user->uid) {
        return;
      }
      $room = new strophe_room();
      $room->lines = variable_get('strophe_block_num_lines' , 5);
      $room->room = variable_get('strophe_block_room', 'conference') . '@conference.'. variable_get('strophe_domain', 'jabber.org');
      drupal_add_js(array(
        'strophe' => array('room' => $room->room)
        ), 'setting'); //[FIXME] handle multiple chat room
      drupal_add_js(drupal_get_path('module', 'strophe') . '/muc/muc.js');
      switch($delta) {
        case 0:
          drupal_add_js(drupal_get_path('module', 'strophe') . '/muc/muc_room.js');
          $block['subject'] = t('The chat room');
          $block['content'] = theme('strophe_muc_room', $room, $delta);
          return $block;
        case 1:
          drupal_add_js(drupal_get_path('module', 'strophe') . '/muc/muc_presence.js');
          $block['subject'] = t('Presence list');
          $block['content'] = theme('strophe_muc_presence', $room);
          return $block;
      }
  }
}

/**
 * Implementation of hook_theme
 */
function strophe_muc_theme() {
  $path = drupal_get_path('module', 'strophe_muc');
  return array(
  'strophe_muc_room' => array(
    'path' => "$path/theme",
    'template' => 'strophe_muc_room',
  'arguments' => array(
    'chatroom' => NULL,
    'delta' => 0)),
  'strophe_muc_presence' => array(
    'path' => "$path/theme",
    'template' => 'strophe_muc_presence',
  'arguments' => array(
    'chatroom' => NULL,
    'delta' => 0)),
  );
}

/*function template_preprocess_strophe_muc_room(&$variables) {
  drupal_add_js(drupal_get_path('module', 'strophe') . '/muc/muc.js');
}*/

function strophe_muc_menu() {
  $items['admin/settings/strophe/muc'] = array(
    'description' => 'Multi User Chatroom with XMPP over HTTP',
    'title' => 'MUC with BOSH',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('strophe_muc_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    );
  return $items;
}

function strophe_muc_admin_settings() {
  $form['strophe_default_room'] = array(
    '#type' => 'textfield',
    '#title' => 'Default room name',
    '#default_value' => variable_get('strophe_default_room', 'drupal'),
    '#description' => t("Name of the default MUC (Multi User Chatroom)"),
    
  );
  return system_settings_form($form);
}

